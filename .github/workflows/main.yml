name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: | 
        # обновление pip
        python -m pip install --upgrade pip 
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        pip install -r backend/api_foodgram/requirements.txt
        
    - name: Test with flake8
      run: |
        # запуск проверки проекта по flake8
        python -m flake8
  

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3 

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to Docker 
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Push frontend to Docker Hub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: ilya047/frontend:v1.01.2023

        - name: Push api to Docker Hub
          uses: docker/build-push-action@v4
          with:
            context: ./backend/api_foodgram/
            push: true
            tags: ilya047/foodgram-web:v1.10.2023


  # deploy:
  #     if: github.ref_name == 'master'
  #     runs-on: ubuntu-latest
  #     needs: build_and_push_to_docker_hub
  #     steps:
  #       - name: executing remote ssh commands to deploy
  #         uses: appleboy/ssh-action@master
  #         with:
  #           host: ${{ secrets.HOST }}
  #           username: ${{ secrets.USER }}
  #           key: ${{ secrets.SSH_KEY }}
  #           passphrase: ${{ secrets.PASSPHRASE }}
  #           script: |
  #             sudo systemctl stop nginx 
  #             cd foodgram-project-template/
  #             sudo docker-compose stop
  #             sudo docker-compose rm web
  #             sudo docker-compose up -d
  #             sudo docker-compose exec -T web python manage.py migrate
  #             sudo docker-compose exec -T web python manage.py collectstatic --no-input
  

  # send_message:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #   - name: send message
  #     uses: appleboy/telegram-action@master
  #     with:
  #       to: ${{ secrets.TELEGRAM_TO }}
  #       token: ${{ secrets.TELEGRAM_TOKEN }}
  #       message: ${{ github.workflow }} успешно выполнен!
